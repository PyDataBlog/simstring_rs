name: Code Coverage
on: [push, pull_request]
jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common python3-dev

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install grcov and llvm-tools
        run: |
          cargo install grcov --force
          rustup component add llvm-tools

      - name: Run tests and generate coverage report
        run: |
          # Create directory for coverage reports
          mkdir -p ./coverage
          # Set flags for coverage generation
          export CARGO_INCREMENTAL=0
          export RUSTFLAGS="-Cinstrument-coverage"
          # Set the path for the raw coverage data
          export LLVM_PROFILE_FILE="target/coverage/simstring_rs-%p-%m.profraw"
          # Run all tests, including the ignored python bindings
          cargo test --all-features -- --include-ignored
          # Generate the coverage report
          grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore "/*" --ignore "tests/*" -o ./coverage.lcov
          grcov . --binary-path ./target/debug/ -s . -t cobertura --branch --ignore-not-existing --ignore "/*" --ignore "tests/*" -o ./coverage/cobertura.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/cobertura.xml
          fail_ci_if_error: true
